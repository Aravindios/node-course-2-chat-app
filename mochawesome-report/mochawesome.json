{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2018-06-14T16:34:13.705Z",
    "end": "2018-06-14T16:34:13.725Z",
    "duration": 20,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "c6352989-1162-4480-a175-8fa37da60c04",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "b26b12a7-c607-433a-9b5a-5639ceb6908e",
        "title": "generateMessage",
        "fullFile": "/Users/ksawme/Dev/nodejs/node-course-2-chat-app/server/utils/message.test.js",
        "file": "/server/utils/message.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should generate the correct message object",
            "fullTitle": "generateMessage should generate the correct message object",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var from = 'Jen';\nvar text = 'Some message';\nvar message = generateMessage(from, text);\nexpect(message.createdAt).toBeA('number');\nexpect(message).toInclude({ from, text });",
            "err": {},
            "isRoot": false,
            "uuid": "53156dbd-273c-417c-9773-a735baad8b26",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "53156dbd-273c-417c-9773-a735baad8b26"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "be516ade-cc40-4d3e-846e-616238d00471",
        "title": "generateLocationMessage",
        "fullFile": "/Users/ksawme/Dev/nodejs/node-course-2-chat-app/server/utils/message.test.js",
        "file": "/server/utils/message.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should generate correct location object",
            "fullTitle": "generateLocationMessage should generate correct location object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var from = 'Deb';\nvar latitude = 15;\nvar longitude = 19;\nvar url = 'https://www.google.com/maps?q=15,19';\nvar message = generateLocationMessage(from, latitude, longitude);\nexpect(message.createdAt).toBeA('number');\nexpect(message).toInclude({ from, url });",
            "err": {},
            "isRoot": false,
            "uuid": "a7fcb3c5-46f3-45ab-9b82-2489966d2401",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a7fcb3c5-46f3-45ab-9b82-2489966d2401"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3ac5964f-3bcc-44df-9b70-9c6eb72ca28a",
        "title": "Users",
        "fullFile": "/Users/ksawme/Dev/nodejs/node-course-2-chat-app/server/utils/users.test.js",
        "file": "/server/utils/users.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Users \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "users = new Users();\nusers.users = [{\n  id: '1',\n  name: 'Mike',\n  room: 'Node Course'\n}, {\n  id: '2',\n  name: 'Jen',\n  room: 'React Course'\n}, {\n  id: '3',\n  name: 'Julie',\n  room: 'Node Course'\n}];",
            "err": {},
            "isRoot": false,
            "uuid": "cecb65d6-21b3-414a-9a59-b7254984a407",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should add new user",
            "fullTitle": "Users should add new user",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var users = new Users();\nvar user = {\n  id: '123',\n  name: 'Andrew',\n  room: 'The Office Fans'\n};\nvar resUser = users.addUser(user.id, user.name, user.room);\nexpect(users.users).toEqual([user]);",
            "err": {},
            "isRoot": false,
            "uuid": "4ca94863-1488-4225-ba53-054294a655e9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should remove a user",
            "fullTitle": "Users should remove a user",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userId = '1';\nvar user = users.removeUser(userId);\nexpect(user.id).toBe(userId);\nexpect(users.users.length).toBe(2);",
            "err": {},
            "isRoot": false,
            "uuid": "41206a11-e25f-449e-9311-5a886193b833",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should not remove user",
            "fullTitle": "Users should not remove user",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userId = '99';\nvar user = users.removeUser(userId);\nexpect(user).toNotExist();\nexpect(users.users.length).toBe(3);",
            "err": {},
            "isRoot": false,
            "uuid": "676c4151-4af2-4c96-8d80-04987722efd0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find user",
            "fullTitle": "Users should find user",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userId = '2';\nvar user = users.getUser(userId);\nexpect(user.id).toBe(userId);",
            "err": {},
            "isRoot": false,
            "uuid": "410aa46f-4e94-4650-9f83-47b94b873f76",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should not find user",
            "fullTitle": "Users should not find user",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userId = '99';\nvar user = users.getUser(userId);\nexpect(user).toNotExist();",
            "err": {},
            "isRoot": false,
            "uuid": "37486d30-6eee-4837-b175-47dd4abd8f86",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return names for node course",
            "fullTitle": "Users should return names for node course",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userList = users.getUserList('Node Course');\nexpect(userList).toEqual(['Mike', 'Julie']);",
            "err": {},
            "isRoot": false,
            "uuid": "5fc65d38-7633-4a6b-92d2-21526dd4d8ad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return names for react course",
            "fullTitle": "Users should return names for react course",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userList = users.getUserList('React Course');\nexpect(userList).toEqual(['Jen']);",
            "err": {},
            "isRoot": false,
            "uuid": "3df3bd1f-5774-49de-98b2-b72e784b2e01",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4ca94863-1488-4225-ba53-054294a655e9",
          "41206a11-e25f-449e-9311-5a886193b833",
          "676c4151-4af2-4c96-8d80-04987722efd0",
          "410aa46f-4e94-4650-9f83-47b94b873f76",
          "37486d30-6eee-4837-b175-47dd4abd8f86",
          "5fc65d38-7633-4a6b-92d2-21526dd4d8ad",
          "3df3bd1f-5774-49de-98b2-b72e784b2e01"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "c695a2e1-c946-45d2-8f1c-84cfda337a8f",
        "title": "isRealString",
        "fullFile": "/Users/ksawme/Dev/nodejs/node-course-2-chat-app/server/utils/validation.test.js",
        "file": "/server/utils/validation.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should reject non-string value",
            "fullTitle": "isRealString should reject non-string value",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var res = isRealString(98);\nexpect(res).toBe(false);",
            "err": {},
            "isRoot": false,
            "uuid": "c1a7ff53-378e-4242-8ecd-269718bf9836",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should reject string with only spaces",
            "fullTitle": "isRealString should reject string with only spaces",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var res = isRealString('  ');\nexpect(res).toBe(false);",
            "err": {},
            "isRoot": false,
            "uuid": "11b0fae7-70ec-4750-83fc-e3fca732ffd6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should allow string with non-space characters",
            "fullTitle": "isRealString should allow string with non-space characters",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var res = isRealString('   Andrew   ');\nexpect(res).toBe(true);",
            "err": {},
            "isRoot": false,
            "uuid": "955f5ddc-3070-4730-928e-0ce8421da67d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c1a7ff53-378e-4242-8ecd-269718bf9836",
          "11b0fae7-70ec-4750-83fc-e3fca732ffd6",
          "955f5ddc-3070-4730-928e-0ce8421da67d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}